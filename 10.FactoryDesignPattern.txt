1)/*Create the class as CarFactoryExample */

package car;

public class CarFactoryExample {

    // 1) Car class
    public abstract static class Car {
        private CarType model = null;
        
        // Constructor to initialize the model and arrange parts
        public Car(CarType model) {
            this.model = model;
            arrangeParts();
        }
        
        private void arrangeParts() {
            // Do one-time processing here
            System.out.println("Arranging parts for " + model);
        }

        // Do subclass-level processing in this method
        protected abstract void construct();

        public CarType getModel() {
            return model;
        }

        public void setModel(CarType model) {
            this.model = model;
        }
    }

    // 2) CarFactory class
    public static class CarFactory {
        public static Car buildCar(CarType model) {
            Car car = null;
            switch (model) {
                case SMALL:
                    car = new SmallCar();
                    break;

                case SEDAN:
                    car = new SedanCar();
                    break;

                case LUXURY:
                    car = new LuxuryCar();
                    break;

                default:
                    // throw some exception
                    System.out.println("Car model not available.");
                    break;
            }
            return car;
        }
    }

    // 3) CarType enum
    public enum CarType {
        SMALL, SEDAN, LUXURY
    }

    // 4) LuxuryCar class
    public static class LuxuryCar extends Car {
        
        LuxuryCar() {
            super(CarType.LUXURY);
            construct();
        }

        @Override
        protected void construct() {
            System.out.println("Building luxury car");
            // add accessories for luxury car
        }
    }

    // 5) SedanCar class
    public static class SedanCar extends Car {
        
        SedanCar() {
            super(CarType.SEDAN);
            construct();
        }

        @Override
        protected void construct() {
            System.out.println("Building sedan car");
            // add accessories for sedan car
        }
    }

    // 6) SmallCar class
    public static class SmallCar extends Car {
        
        SmallCar() {
            super(CarType.SMALL);
            construct();
        }

        @Override
        protected void construct() {
            System.out.println("Building small car");
            // add accessories for small car
        }
    }

    // 7) TestFactoryPattern class
    public static class TestFactoryPattern {
        public static void main(String[] args) {
            System.out.println(CarFactory.buildCar(CarType.SMALL));
            System.out.println(CarFactory.buildCar(CarType.SEDAN));
            System.out.println(CarFactory.buildCar(CarType.LUXURY));
        }
    }
}
